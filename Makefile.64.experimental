# Configuration variables
# Set strip = 0 to include debug information
# prefix, unit, installdir and windir allow to control installation paths

strip = 1
host = x86_64-w64-mingw32
prefix = /mingw
unit = C
installdir = /MinGW
installpath = $(unit):$(installdir)
windir = /c/Windows

# Paths

bindir = $(prefix)/bin
libdir = $(prefix)/lib
includedir = $(prefix)/include
winsysdir = $(windir)/SysWOW64
pkg_config_path = $(libdir)/pkgconfig

# Flags

ifeq ($(strip), 1)
	stripflag = -s
	debugflag =
	install = install-strip
else
	stripflag =
	debugflag = -g
	install = install
endif
flags = -march=corei7 -mfpmath=sse -msse3 -mthreads -DWINVER=0x0500
cppflags = -I$(includedir) -I$(prefix)/$(host)/include \
	-I$(libdir)/gcc/$(host)/$(gccver)/include
cflags = $(debugflag) -O2 -fno-strict-aliasing $(cppflags)
ldflags = $(stripflag) -L$(libdir) -L$(bindir) -L$(prefix)/$(host)/lib \
	-L$(winsysdir)

# Compilers

cc = 'gcc $(flags)'
cxx = 'g++ $(flags)'

# Configure script

configure = PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' CFLAGS='$(cflags)' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static

# Versions

gccver = 4.8.2
libtoolver = 2.4.2
autoconfver = 2.69
automakever = 1.14.1
libiconvver = 1.14
zlibver = 1.2.8
pkgconfigver = 0.28
expatver = 2.1.0
libxmlver = 2.9.1
libffiver = 3.0.13
termcapver = 1.3.1
readlinever = 6.2
sqlitever = 3080300
pythonver = 2.7.6
glibver = 2.39.4
gettextver = 0.18.3.2
libpngver = 1.6.9
freetypever = 2.5.2
fontconfigver = 2.11.0
pixmanver = 0.32.4
cairover = 1.12.16
girver = 1.39.3
atkver = 2.11.6
pangover = 1.36.2
gdk_pixbufver = 2.30.5
hicolorver = 0.12
gtk2ver = 2.24.22
freeglutver = 2.8.1
gslver = 1.16
gtk3ver = 3.10.6

# Some URLs

gnuurl = http://ftp.gnu.org/pub/gnu
sfurl = http://sourceforge.net/projects
gnomeurl = http://ftp.gnome.org/pub/gnome

# Files

fstab = /etc/fstab
msys = /bin/zip.exe

msys_patches = MSYS2-packages-master.zip
mingw_patches = MINGW-packages-master.zip

gccurl = $(sfurl)/mingw-w64/files/Toolchains targetting Win64/Personal Builds/mingw-builds/$(gccver)/threads-win32/seh
gcctar = x86_64-$(gccver)-release-win32-seh-rt_v3-rev2.7z
gccexe = $(bindir)/gcc.exe

libtoolurl = $(gnuurl)/libtool
libtooldir = libtool-$(libtoolver)
libtooltar = libtool-$(libtoolver).tar.xz
libtoolmak = $(libtooldir)/Makefile
libtoolexe = $(bindir)/libtool

autoconfurl = $(gnuurl)/autoconf
autoconfdir = autoconf-$(autoconfver)
autoconftar = autoconf-$(autoconfver).tar.xz
autoconfmak = $(autoconfdir)/Makefile
autoconfexe = $(bindir)/autoconf

automakeurl = $(gnuurl)/automake
automakedir = automake-$(automakever)
automaketar = automake-$(automakever).tar.xz
automakemak = $(automakedir)/Makefile
automakeexe = $(bindir)/automake

libiconvurl = $(gnuurl)/libiconv
libiconvdir = libiconv-$(libiconvver)
libiconvtar = libiconv-$(libiconvver).tar.gz
libiconvmak = $(libiconvdir)/Makefile
libiconvdll = $(bindir)/libiconv-2.dll

zliburl = $(sfurl)/libpng/files/zlib/$(zlibver)
zlibdir = zlib-$(zlibver)
zlibtar = zlib-$(zlibver).tar.xz
zlibmak = $(zlibdir)/Makefile
zlibdll = $(bindir)/libz.dll

pkgconfigurl = http://pkgconfig.freedesktop.org/releases
pkgconfigdir = pkg-config-$(pkgconfigver)
pkgconfigtar = pkg-config-$(pkgconfigver).tar.gz
pkgconfigmak = $(pkgconfigdir)/Makefile
pkgconfigexe = $(bindir)/pkg-config.exe

expaturl =  $(sfurl)/expat/files/expat/$(expatver)
expatdir = expat-$(expatver)
expattar = expat-$(expatver).tar.gz
expatmak = $(expatdir)/Makefile
expatdll = $(bindir)/libexpat-1.dll

libxmlurl = http://xmlsoft.org/sources
libxmldir = libxml2-$(libxmlver)
libxmltar = libxml2-$(libxmlver).tar.gz
libxmlmak = $(libxmldir)/Makefile
libxmldll = $(bindir)/libxml2-2.dll

libffiurl = ftp://sourceware.org/pub/libffi
libffidir = libffi-$(libffiver)
libffitar = libffi-$(libffiver).tar.gz
libffimak = $(libffidir)/Makefile
libffidll = $(bindir)/libffi-6.dll

termcapurl = $(gnuurl)/termcap
termcapdir = termcap-$(termcapver)
termcaptar = termcap-$(termcapver).tar.gz
termcapmak = $(termcapdir)/Makefile
termcapdll = $(libdir)/libtermcap.a

readlineurl = $(gnuurl)/readline
readlinedir = readline-$(readlinever)
readlinetar = readline-$(readlinever).tar.gz
readlinemak = $(readlinedir)/Makefile
readlinedll = $(bindir)/libreadline6.dll

sqliteurl = http://www.sqlite.org/2014
sqlitedir = sqlite-autoconf-$(sqlitever)
sqlitetar = sqlite-autoconf-$(sqlitever).tar.gz
sqlitemak = $(sqlitedir)/Makefile
sqlitedll = $(bindir)/libsqlite3-0.dll

pythonurl = http://www.python.org/ftp/python/$(pythonver)
pythondir = Python-$(pythonver)
pythontar = Python-$(pythonver).tar.xz
pythonmak = $(pythondir)/Makefile
pythondll = $(bindir)/libpython2.7.dll

gliburl = $(gnomeurl)/sources/glib/$(basename $(glibver))
glibdir = glib-$(glibver)
glibtar = glib-$(glibver).tar.xz
glibmak = $(glibdir)/Makefile
glibdll = $(bindir)/libglib-2.0-0.dll

gettextbinurl = $(gnomeurl)/binaries/win64/dependencies
gettexturl = $(gnuurl)/gettext
gettextdir = gettext-$(gettextver)
gettexttar = gettext-$(gettextver).tar.gz
gettextmak = $(gettextdir)/Makefile
gettextdll = $(bindir)/libintl-8.dll

libpngurl = $(sfurl)/libpng/files/libpng16
libpngdir = libpng-$(libpngver)
libpngtar = libpng-$(libpngver).tar.xz
libpngpatchurl = $(sfurl)/libpng-apng/files/libpng16/$(libpngver)
libpngpatch = libpng-$(libpngver)-apng.patch
libpngmak = $(libpngdir)/Makefile
libpngdll = $(bindir)/libpng16-16.dll

freetypeurl = $(sfurl)/freetype/files/freetype2/$(freetypever)
freetypedir = freetype-$(freetypever)
freetypetar = freetype-$(freetypever).tar.bz2
freetypemak = $(freetypedir)/config.mk
freetypedll = $(bindir)/libfreetype-6.dll

fontconfigurl = http://fontconfig.freedesktop.org/release
fontconfigdir = fontconfig-$(fontconfigver)
fontconfigtar = fontconfig-$(fontconfigver).tar.bz2
fontconfigmak = $(fontconfigdir)/Makefile
fontconfigdll = $(bindir)/libfontconfig-1.dll

pixmanurl = http://www.cairographics.org/releases
pixmandir = pixman-$(pixmanver)
pixmantar = pixman-$(pixmanver).tar.gz
pixmanmak = $(pixmandir)/Makefile
pixmandll = $(bindir)/libpixman-1-0.dll

cairourl = http://www.cairographics.org/releases
cairodir = cairo-$(cairover)
cairotar = cairo-$(cairover).tar.xz
cairomak = $(cairodir)/Makefile
cairodll = $(bindir)/libcairo-2.dll

girurl = $(gnomeurl)/sources/gobject-introspection/$(basename $(girver))
girdir = gobject-introspection-$(girver)
girtar = gobject-introspection-$(girver).tar.xz
girmak = $(girdir)/Makefile
girdll = $(bindir)/g-ir-compiler

atkurl = $(gnomeurl)/sources/atk/2.10
atkdir = atk-$(atkver)
atktar = atk-$(atkver).tar.xz
atkmak = $(atkdir)/Makefile
atkdll = $(bindir)/libatk-1.0-0.dll

pangourl = $(gnomeurl)/sources/pango/$(basename $(pangover))
pangodir = pango-$(pangover)
pangotar = pango-$(pangover).tar.xz
pangomak = $(pangodir)/Makefile
pangodll = $(bindir)/libpango-1.0-0.dll

gdk_pixbufurl = $(gnomeurl)/sources/gdk-pixbuf/$(basename $(gdk_pixbufver))
gdk_pixbufdir = gdk-pixbuf-$(gdk_pixbufver)
gdk_pixbuftar = gdk-pixbuf-$(gdk_pixbufver).tar.xz
gdk_pixbufmak = $(gdk_pixbufdir)/Makefile
gdk_pixbufdll = $(bindir)/libgdk_pixbuf-2.0-0.dll

hicolorurl = http://icon-theme.freedesktop.org/releases
hicolordir = hicolor-icon-theme-$(hicolorver)
hicolortar = hicolor-icon-theme-$(hicolorver).tar.gz
hicolormak = $(hicolordir)/Makefile
hicolordll = $(prefix)/share/icons/hicolor

gtk2url = $(gnomeurl)/sources/gtk+/$(basename $(gtk2ver))
gtk2dir = gtk+-$(gtk2ver)
gtk2tar = gtk+-$(gtk2ver).tar.xz
gtk2mak = $(gtk2dir)/Makefile
gtk2dll = $(bindir)/libgtk-win32-2.0-0.dll

freegluturl = $(sfurl)/freeglut/files/freeglut/$(freeglutver)
freeglutdir = freeglut-$(freeglutver)
freegluttar = freeglut-$(freeglutver).tar.gz
freeglutmak = $(freeglutdir)/Makefile
freeglutdll = $(bindir)/libglut-0.dll

gslurl = $(gnuurl)/gsl
gsldir = gsl-$(gslver)
gsltar = gsl-$(gslver).tar.gz
gslmak = $(gsldir)/Makefile
gsldll = $(bindir)/libgsl-0.dll

gtk3url = $(gnomeurl)/sources/gtk+/$(basename $(gtk3ver))
gtk3dir = gtk+-$(gtk3ver)
gtk3tar = gtk+-$(gtk3ver).tar.xz
gtk3mak = $(gtk3dir)/Makefile
gtk3dll = $(bindir)/libgtk-3-0.dll

mpidll = $(bindir)/msmpi.dll

all = \
	$(msys) \
	$(gccexe) \
	$(libtoolexe) \
	$(autoconfexe) \
	$(automakeexe) \
	$(libiconvdll) \
	$(zlibdll) \
	$(pkgconfigexe) \
	$(expatdll) \
	$(libxmldll) \
	$(libffidll) \
	$(termcapdll) \
	$(readlinedll) \
	$(sqlitedll) \
	$(pythondll) \
	$(glibdll) \
	$(gettextdll) \
	$(libpngdll) \
	$(freetypedll) \
	$(fontconfigdll) \
	$(pixmandll) \
	$(cairodll) \
	$(girdll) \
	$(atkdll) \
	$(pangodll) \
	$(gdk_pixbufdll) \
	$(hicolordll) \
	$(gtk2dll) \
	$(freeglutdll) \
	$(gsldll) \
	$(gtk3dll) \
	$(mpidll)

all: $(all)

$(fstab):
	echo "$(installpath) $(prefix)" > $(fstab)

$(msys): $(fstab)
	mingw-get install msys-unzip msys-wget msys-perl msys-patch msys-flex \
		msys-bison msys-m4 msys-vim msys-openssh msys-man msys-zip
	touch $(msys)
	cd $(prefix); \
	wget -c -q $(gettextbinurl)/gettext-runtime_0.18.1.1-2_win64.zip; \
	unzip -o -q gettext-runtime_0.18.1.1-2_win64.zip; \
	wget -c -q $(gettextbinurl)/gettext-runtime-dev_0.18.1.1-2_win64.zip; \
	unzip -o -q gettext-runtime-dev_0.18.1.1-2_win64.zip; \
	wget -c -q $(gettextbinurl)/gettext-tools-dev_0.18.1.1-2_win64.zip; \
	unzip -o -q gettext-tools-dev_0.18.1.1-2_win64.zip

$(msys_patches):
	wget --no-check-certificate -q "https://github.com/Alexpux/MSYS2-packages/archive/master.zip" -O $(msys_patches)

$(mingw_patches):
	wget --no-check-certificate -q "https://github.com/Alexpux/MINGW-packages/archive/master.zip" -O $(mingw_patches)

$(gcctar):
	wget -c -q "$(gccurl)/$(gcctar)"
	touch $(gcctar)

$(gccexe): $(gcctar) $(msys_patches) $(mingw_patches)
	7z x $(gcctar)
	-cd mingw64; tar cf $(prefix)/temp.tar *
	cd $(prefix); tar xf temp.tar
	rm $(prefix)/temp.tar
	rm -rf mingw64
	rm -rf $(prefix)/opt
	touch $(gccexe)

$(libtooltar):
	wget -c -q $(libtoolurl)/$(libtooltar)
	touch $(libtooltar)

$(libtoolmak): $(gccexe) $(libtooltar)
	if test -d $(libtooldir); then rm -rf $(libtooldir); fi
	tar xJf $(libtooltar)
	cd $(libtooldir); \
	unzip -j ../$(msys_patches) \
		MSYS2-packages-master/libtool/*.patch -d .; \
	patch -p1 <2.4-cygwin-mingw-Create-UAC-manifest-files.patch; \
	patch -p1 <2.4-pass-ldflags.patch; \
	patch -p1 <libtool-2.4.2-msys2.patch; \
	patch -p1 <libtool-2.4.2-include-process-h.patch; \
	$(configure)

$(libtoolexe): $(libtoolmak)
	cd $(libtooldir); make && make $(install) && make clean

$(autoconftar):
	wget -c -q $(autoconfurl)/$(autoconftar)
	touch $(autoconftar)

$(autoconfmak): $(gccexe) $(libtoolexe) $(autoconftar)
	if test -d $(autoconfdir); then rm -rf $(autoconfdir); fi
	tar xJf $(autoconftar)
	cd $(autoconfdir); \
	unzip -j ../$(msys_patches) \
		MSYS2-packages-master/autoconf/*.patch -d .; \
	patch -p1 <autoconf-2.69-fix-texinfo.patch; \
	patch -p1 <autoconf-2.69-msys2.patch; \
	$(configure)

$(autoconfexe): $(autoconfmak)
	cd $(autoconfdir); make && make $(install) && make clean

$(automaketar):
	wget -c -q $(automakeurl)/$(automaketar)
	touch $(automaketar)

$(automakemak): $(gccexe) $(libtoolexe) $(autoconfexe) $(automaketar)
	if test -d $(automakedir); then rm -rf $(automakedir); fi
	tar xJf $(automaketar)
	cd $(automakedir); \
	unzip -j ../$(msys_patches) \
		MSYS2-packages-master/automake1.14/*.patch -d .; \
	patch -p2 <automake1.14-documentation.patch; \
	patch -p1 <automake-1.14-msys2.patch; \
	$(configure)

$(automakeexe): $(automakemak)
	cd $(automakedir); make && make $(install) && make clean

$(libiconvtar):
	wget -c -q $(libiconvurl)/$(libiconvtar)
	touch $(libiconvtar)

$(libiconvmak): $(gccexe) $(libiconvtar)
	if test -d $(libiconvdir); then rm -rf $(libiconvdir); fi
	tar xzf $(libiconvtar)
	cd $(libiconvdir); $(configure)

$(libiconvdll): $(libiconvmak)
	cd $(libiconvdir); make && make $(install) && make clean

$(zlibtar):
	wget -c -q $(zliburl)/$(zlibtar)
	touch $(zlibtar)

$(zlibmak): $(gccexe) $(zlibtar)
	if test -d $(zlibdir); then rm -rf $(zlibdir); fi
	tar xJf $(zlibtar)
	cd $(zlibdir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-zlib/*.patch -d .; \
	grep -A 24 '^ Copyright' zlib.h > LICENSE; \
	patch -p2 -i 01-zlib-1.2.7-1-buildsys.mingw.patch; \
	patch -p2 -i 02-no-undefined.mingw.patch; \
	patch -p2 -i 03-dont-put-sodir-into-L.mingw.patch; \
	patch -p2 -i 04-wrong-w8-check.mingw.patch; \
	patch -p2 -i 05-fix-a-typo.mingw.patch; \
	cp contrib/amd64/amd64-match.S match.S; \
	sed 's/CC = \$$(PREFIX)gcc/CC = \$$(PREFIX)gcc $(flags) -DNO_UNDERLINE/g' \
		win32/Makefile.gcc > Makefile; \
	sed 's/LDFLAGS = /LDFLAGS = $(stripflag) /g' Makefile

$(zlibdll): $(zlibmak)
	cd $(zlibdir); \
	make LOC=-DASMV OBJA=match.o && \
	INCLUDE_PATH=$(includedir) LIBRARY_PATH=$(libdir) BINARY_PATH=$(bindir) \
		make install SHARED_MODE=1
	cp $(bindir)/zlib1.dll $(bindir)/libz.dll

$(pkgconfigtar):
	wget -c -q $(pkgconfigurl)/$(pkgconfigtar)
	touch $(pkgconfigtar)

$(pkgconfigmak): $(gccexe) $(automakeexe) $(pkgconfigtar)
	if test -d $(pkgconfigdir); then rm -rf $(pkgconfigdir); fi
	tar xzf $(pkgconfigtar)
	cd $(pkgconfigdir); \
	autoreconf -if; \
	$(configure) --with-internal-glib --disable-host-tool

$(pkgconfigexe): $(pkgconfigmak)
	cd $(pkgconfigdir); make && make install && make clean

$(expattar):
	wget -c -q $(expaturl)/$(expattar)
	touch $(expattar)

$(expatmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(expattar)
	if test -d $(expatdir); then rm -rf $(expatdir); fi
	tar xzf $(expattar);
	cd $(expatdir); autoreconf -if; $(configure)

$(expatdll): $(expatmak)
	cd $(expatdir); make && make install && make clean
	mv $(prefix)/bin/xmlwf $(prefix)/bin/xmlwf.exe

$(libxmltar):
	wget -c -q $(libxmlurl)/$(libxmltar)
	touch $(libxmltar)

$(libxmlmak): $(gccexe) $(automakeexe) $(zlibdll) $(libiconvdll) \
	$(pkgconfigexe) $(libxmltar)
	if test -d $(libxmldir); then rm -rf $(libxmldir); fi
	tar xzf $(libxmltar)
	cd $(libxmldir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-libxml2/*.patch -d .; \
	patch -p1 <libxml2-2.9.0-largefile.patch; \
	patch -p1 <libxml2-2.9.0-man_fixes.patch; \
	patch -p1 <libxml2-2.9.0-open.gz.patch; \
	patch -p1 <0004-detect-ws2tcpip.mingw.patch; \
	patch -p1 <0005-fix-char-cast-warning.mingw.patch; \
	patch -p1 <0006-fix-unused-var-warning.mingw.patch; \
	patch -p1 <0007-fix-stat-redefinition.mingw.patch; \
	patch -p1 <0008-include-winsock2.h-before-windows.h.mingw.patch; \
	patch -p1 <0009-use-wstat-appropriate-for-mingw-w64.mingw.patch; \
	patch -p1 <0010-mingw-w64-defines-lots-of-errnos.mingw.patch; \
	patch -p1 <0011-more-winsock-inclusion-order-fixes.mingw.patch; \
	patch -p1 <0012-socklen-is-signed-on-mingw-w64.mingw.patch; \
	patch -p1 <0013-fix-field-type-signedness.all.patch; \
	patch -p1 <0014-fix-prototype-warning.all.patch; \
	patch -p1 <0015-fix-unused-parameters-warning.all.patch; \
	patch -p1 <0016-WARNING-to-be-fixed.all.patch; \
	patch -p1 <0017-fix-const-warning.all.patch; \
	patch -p1 <0018-function-declaration-isnt-prototype.all.patch; \
	patch -p1 <0019-unused-flags.all.patch; \
	patch -p1 <0020-fix-size_t-format-specifier.all.patch; \
	patch -p1 <0023-fix-sitedir-detection.mingw.patch; \
	patch -p1 <0024-shrext-pyd.mingw.patch; \
	patch -p1 <0025-mingw-python-dont-remove-dot.patch; \
	autoreconf -if; \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -fexceptions --param=ssp-buffer-size=4 -D__USE_MINGW_ANSI_STDIO=1' \
	CXXFLAGS='$(cflags) -fexceptions --param=ssp-buffer-size=4 -D__USE_MINGW_ANSI_STDIO=1' \
	LDFLAGS='$(ldflags) -Wl,-no-undefined' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--without-python --with-modules --with-threads=win32; \
	pushd $(prefix) > /dev/null; \
	export PREFIX_DEPS=`pwd -W`; \
	popd > /dev/null; \
	find . -type f -name "Makefile" -exec sed -i "s|${PREFIX_DEPS}|$(prefix)|g" {} \;

$(libxmldll): $(libxmlmak)
	cd $(libxmldir); make && make $(install) && make clean

$(libffitar):
	wget -c -q $(libffiurl)/$(libffitar)
	touch $(libffitar)

$(libffimak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(libffitar)
	if test -d $(libffidir); then rm -rf $(libffidir); fi
	tar xzf $(libffitar)
	cd $(libffidir); \
	autoreconf -if; \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -fexceptions --param=ssp-buffer-size=4' \
	CXXFLAGS='$(cflags) -fexceptions --param=ssp-buffer-size=4' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static

$(libffidll): $(libffimak)
	cd $(libffidir); make && make $(install) && make clean
	sed -i 's,/lib/..,,g' $(libdir)/libffi.la

$(termcaptar):
	wget -c -q $(termcapurl)/$(termcaptar)
	touch $(termcaptar)

$(termcapmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(termcaptar)
	if test -d $(termcapdir); then rm -rf $(termcapdir); fi
	tar xzf $(termcaptar)
	cd $(termcapdir); autoreconf -if; $(configure)

$(termcapdll): $(termcapmak)
	cd $(termcapdir); make && make install && make clean

$(readlinetar):
	wget -c -q $(readlineurl)/$(readlinetar)
	touch $(readlinetar)

$(readlinemak): $(gccexe) $(pkgconfigexe) $(readlinetar)
	if test -d $(readlinedir); then rm -rf $(readlinedir); fi
	tar xzf $(readlinetar)
	cd $(readlinedir); \
	wget -c -q $(readlineurl)/readline-$(readlinever)-patches/readline62-001; \
	wget -c -q $(readlineurl)/readline-$(readlinever)-patches/readline62-002; \
	wget -c -q $(readlineurl)/readline-$(readlinever)-patches/readline62-003; \
	wget -c -q $(readlineurl)/readline-$(readlinever)-patches/readline62-004; \
	wget -c -q $(readlineurl)/readline-$(readlinever)-patches/readline62-005; \
	patch -p0 <readline62-001; \
	patch -p0 <readline62-002; \
	patch -p0 <readline62-003; \
	patch -p0 <readline62-004; \
	patch -p0 <readline62-005; \
	$(configure)

$(readlinedll): $(readlinemak)
	cd $(readlinedir); make && make install && make clean

$(sqlitetar):
	wget -c -q $(sqliteurl)/$(sqlitetar)
	touch $(sqlitetar)

$(sqlitemak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(sqlitetar)
	if test -d $(sqlitedir); then rm -rf $(sqlitedir); fi
	tar xzf $(sqlitetar)
	cd $(sqlitedir); autoreconf -if; \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -fexceptions -DSQLITE_ENABLE_COLUMN_METADATA=1 -DSQLITE_DISABLE_DIRSYNC=1 -DSQLITE_ENABLE_FTS3=3 -DSQLITE_ENABLE_RTREE=1' \
	CXXFLAGS='$(cflags)' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--enable-threadsafe

$(sqlitedll): $(sqlitemak)
	cd $(sqlitedir); make && make $(install) && make clean

$(pythontar):
	wget -c -q $(pythonurl)/$(pythontar)
	touch $(pythontar)

$(pythonmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(expatdll) \
	$(libffidll) $(termcapdll) $(readlinedll) $(sqlitedll) $(pythontar)
	if test -d $(pythondir); then rm -rf $(pythondir); fi
	tar xJf $(pythontar)
	cd $(pythondir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-python2/*.patch -d .; \
	patch -p1 <0100-MINGW-BASE-use-NT-thread-model.patch; \
	patch -p1 <0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch; \
	patch -p1 <0120-MINGW-use-header-in-lowercase.patch; \
	patch -p1 <0130-MINGW-configure-MACHDEP-and-platform-for-build.patch; \
	patch -p1 <0140-MINGW-preset-configure-defaults.patch; \
	patch -p1 <0150-MINGW-configure-largefile-support-for-windows-builds.patch; \
	patch -p1 <0160-MINGW-add-wincrypt.h-in-Python-random.c.patch; \
	patch -p1 <0180-MINGW-init-system-calls.patch; \
	patch -p1 <0190-MINGW-detect-REPARSE_DATA_BUFFER.patch; \
	patch -p1 <0200-MINGW-build-in-windows-modules-winreg.patch; \
	patch -p1 <0210-MINGW-determine-if-pwdmodule-should-be-used.patch; \
	patch -p1 <0220-MINGW-default-sys.path-calculations-for-windows-plat.patch; \
	patch -p1 <0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch; \
	patch -p1 <0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch; \
	patch -p1 <0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch; \
	patch -p1 <0280-issue17219-add-current-dir-in-library-path-if-buildi.patch; \
	patch -p1 <0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch; \
	patch -p1 <0300-MINGW-configure-for-shared-build.patch; \
	patch -p1 <0310-MINGW-dynamic-loading-support.patch; \
	patch -p1 <0320-MINGW-implement-exec-prefix.patch; \
	patch -p1 <0330-MINGW-ignore-main-program-for-frozen-scripts.patch; \
	patch -p1 <0340-MINGW-setup-exclude-termios-module.patch; \
	patch -p1 <0350-MINGW-setup-_multiprocessing-module.patch; \
	patch -p1 <0360-MINGW-setup-select-module.patch; \
	patch -p1 <0370-MINGW-setup-_ctypes-module-with-system-libffi.patch; \
	patch -p1 <0380-MINGW-defect-winsock2-and-setup-_socket-module.patch; \
	patch -p1 <0390-MINGW-exclude-unix-only-modules.patch; \
	patch -p1 <0400-MINGW-setup-msvcrt-module.patch; \
	patch -p1 <0410-MINGW-build-extensions-with-GCC.patch; \
	patch -p1 <0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch; \
	patch -p1 <0430-MINGW-find-import-library.patch; \
	patch -p1 <0440-MINGW-setup-_ssl-module.patch; \
	patch -p1 <0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch; \
	patch -p1 <0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch; \
	patch -p1 <0462-MINGW-support-stdcall-without-underscore.patch; \
	patch -p1 <0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch; \
	patch -p1 <0490-MINGW-customize-site.patch; \
	patch -p1 <0500-add-python-config-sh.patch; \
	patch -p1 <0510-cross-darwin-feature.patch; \
	patch -p1 <0520-py3k-mingw-ntthreads-vs-pthreads.patch; \
	patch -p1 <0530-mingw-system-libffi.patch; \
	patch -p1 <0540-mingw-semicolon-DELIM.patch; \
	patch -p1 <0550-mingw-regen-use-stddef_h.patch; \
	patch -p1 <0560-mingw-use-posix-getpath.patch; \
	patch -p1 <0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch; \
	patch -p1 <0580-mingw32-test-REPARSE_DATA_BUFFER.patch; \
	patch -p1 <0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch; \
	patch -p1 <0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch; \
	patch -p1 <0610-msys-cygwin-semi-native-build-sysconfig.patch; \
	patch -p1 <0620-mingw-sysconfig-like-posix.patch; \
	patch -p1 <0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch; \
	patch -p1 <0640-mingw-x86_64-size_t-format-specifier-pid_t.patch; \
	patch -p1 <0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch; \
	patch -p1 <0660-mingw-use-backslashes-in-compileall-py.patch; \
	patch -p1 <0670-msys-convert_path-fix-and-root-hack.patch; \
	patch -p1 <0690-allow-static-tcltk.patch; \
	patch -p1 <0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch; \
	patch -p1 <0720-mingw-pdcurses_ISPAD.patch; \
	patch -p1 <0740-grammar-fixes.patch; \
	patch -p1 <0750-Add-interp-Python-DESTSHARED-to-PYTHONPATH-b4-pybuilddir-txt-dir.patch; \
	patch -p1 <0760-msys-monkeypatch-os-system-via-sh-exe.patch; \
	patch -p1 <0770-msys-replace-slashes-used-in-io-redirection.patch; \
	patch -p1 <0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch; \
	patch -p1 <0800-mingw-install-layout-as-posix.patch; \
	patch -p1 <0820-mingw-reorder-bininstall-ln-symlink-creation.patch; \
	patch -p1 <0830-add-build-sysroot-config-option.patch; \
	patch -p1 <0840-add-builddir-to-library_dirs.patch; \
	patch -p1 <0850-cross-PYTHON_FOR_BUILD-gteq-276-and-fullpath-it.patch; \
	patch -p1 <1000-dont-link-with-gettext.patch; \
	patch -p1 <1010-ctypes-python-dll.patch; \
	patch -p1 <1020-gdbm-module-includes.patch; \
	patch -p0 <../python-2.7.6-DBL_EPSILON.patch; \
	patch -p0 <../python-2.7.6-empty-DESTDIR.patch; \
	autoreconf -if; \
	sed -i '/SQLITE_OMIT_LOAD_EXTENSION/d' setup.py; \
	sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/python2|" Lib/cgi.py; \
	sed -i 's/python2.3/python2/g' Lib/distutils/tests/test_build_scripts.py \
		Lib/distutils/tests/test_install_scripts.py \
		Tools/scripts/gprof2html.py; \
	echo \"\" > Parser/pgen.stamp; \
	rm -rf Modules/{expat,zlib,_ctypes/{darwin,libffi}*}; \
	LIBFFI_INCLUDEDIR=`pkg-config --cflags libffi | sed 's/-I//'` \
	PKG_CONFIG_PATH=$(pkg_config_path) \
	CC=$(cc) CXX=$(cxx) \
	CPPFLAGS='$(cppflags) -I$(libdir)/libffi-$(libffiver)/include' \
	CFLAGS='$(cflags) -fwrapv -D__USE_MINGW_ANSI_STDIO=1 $(cflags) -I$(libdir)/libffi-$(libffiver)/include' \
	CXXFLAGS='$(cflags) -fwrapv -D__USE_MINGW_ANSI_STDIO=1 $(cflags) -I$(libdir)/libffi-$(libffiver)/include' \
	LDFLAGS='-L. $(ldflags) -lm -lexpat -lffi -lreadline' \
	PYTHON_FOR_BUILD='python.exe' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--build=mingw32 --with-threads --with-system-expat --with-system-ffi; \
		ac_cv_working_tzset=no

baddir = /$(unit)$(installdir)/msys/1.0$(installdir)

$(pythondll): $(pythonmak)
	cd $(pythondir); make && make install && make clean
	mv $(baddir)/bin/* $(prefix)/bin
	rmdir $(baddir)/bin
	rm -rf $(prefix)/lib/python$(basename $(pythonver))/lib-dynload
	mv -f $(baddir)/lib/python$(basename $(pythonver))/* \
		$(prefix)/lib/python$(basename $(pythonver))
	rm -rf $(baddir)

$(glibtar):
	wget -c -q $(gliburl)/$(glibtar)
	touch $(glibtar)

$(glibmak): $(gccexe) $(libiconvdll) $(zlibdll) $(pkgconfigexe) $(libffidll) \
	$(pythondll) $(glibtar) 
	if test -d $(glibdir); then rm -rf $(glibdir); fi
	tar xJf $(glibtar)
	cd $(glibdir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-glib2/*.patch -d .; \
	patch -Np1 -i "0001-Use-CreateFile-on-Win32-to-make-sure-g_unlink-always.patch"; \
	patch -Np0 -i "glib-send-log-messages-to-correct-stdout-and-stderr.patch"; \
	patch -Np1 -i "glib-prefer-constructors-over-DllMain.patch"; \
	patch -Np1 -i "0003-g_abort.all.patch"; \
	patch -Np1 -i "0015-fix-stat.all.patch"; \
	patch -Np1 -i "0016-fix-separators-in-compiled-resources.mingw.patch"; \
	NOCONFIGURE=1 sh autogen.sh; \
	PKG_CONFIG_PATH=$(pkg_config_path) \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -fexceptions --param=ssp-buffer-size=4' \
	CXXFLAGS='$(cflags) -fexceptions --param=ssp-buffer-size=4' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--with-xml-catalog=$(prefix)/etc/xml/catalog

$(glibdll): $(glibmak)
	cd $(glibdir); make && make $(install) && make clean
	sed -i 's,-L=*$(unit):[^ '\'']* ,,g' \
		$(libdir)/libgio-2.0.la $(libdir)/libgobject-2.0.la
	sed -i 's,-L=*$(unit):[^ '\'']*'\'','\'',g' \
		$(libdir)/libgio-2.0.la $(libdir)/libgobject-2.0.la

$(gettexttar):
	wget -c -q $(gettexturl)/$(gettexttar)
	touch $(gettexttar)

$(gettextmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(libiconvdll) \
	$(libxmldll) $(glibdll) $(gettexttar)
	if test -d $(gettextdir); then rm -rf $(gettextdir); fi
	tar xzf $(gettexttar)
	cd $(gettextdir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-gettext/*.patch -d .; \
	patch -p1 <00-relocatex-libintl-0.18.3.1.patch; \
	patch -p0 <04-mingw-script-slash-fix.mingw.patch; \
	patch -p0 <05-always-use-libintl-vsnprintf.mingw.patch; \
	patch -p0 <06-dont-include-ctype-after-gnulibs-wctype.mingw.patch; \
	patch -p0 <07-fix-asprintf-conflict.mingw.patch; \
	patch -p1 <120-Fix-Woe32-link-errors-when-compiling-with-O0.patch; \
	autoreconf -if; \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -fexceptions --param=ssp-buffer-size=4' \
	CXXFLAGS='$(cflags) -fexceptions --param=ssp-buffer-size=4' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--enable-threads=windows --disable-java --disable-native-java \
		--disable-csharp --without-emacs --without-cvs \
		--without-git --with-included-libcroco --with-included-libunistring \
		--with-included-libxml --with-included-glib

$(gettextdll): $(gettextmak)
	cd $(gettextdir); make && make $(install) && make clean
	-rm $(prefix)/gettext*.zip

$(libpngtar):
	-wget -c -q $(libpngurl)/older-releases/$(libpngver)/$(libpngtar)
	-wget -c -q $(libpngurl)/$(libpngver)/$(libpngtar)
	touch $(libpngtar)

$(libpngpatch):
	wget -c -q $(libpngpatchurl)/$(libpngpatch).gz
	gunzip $(libpngpatch).gz

$(libpngmak): $(gccexe) $(automakeexe) $(zlibdll) $(pkgconfigexe) \
	$(libpngtar) $(libpngpatch)
	if test -d $(libpngdir); then rm -rf $(libpngdir); fi
	tar xJf $(libpngtar)
	cd $(libpngdir); \
	patch -p1 <../$(libpngpatch); \
	autoreconf -if; \
	$(configure) as_ln_s="cp -pR"

$(libpngdll): $(libpngmak)
	cd $(libpngdir); make && make $(install) && make clean

$(freetypetar):
	wget -c -q $(freetypeurl)/$(freetypetar)
	touch $(freetypetar)

$(freetypemak): $(gccexe) $(zlibdll) $(pkgconfigexe) $(freetypetar)
	if test -d $(freetypedir); then rm -rf $(freetypedir); fi
	tar xjf $(freetypetar)
	cd $(freetypedir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-freetype/*.patch -d .; \
	patch -Np1 <freetype-2.2.1-enable-valid.patch; \
	patch -Np1 <freetype-2.5.1-enable-spr.patch; \
	$(configure) --with-zlib=$(prefix) --without-png

$(freetypedll): $(freetypemak)
	cd $(freetypedir); make && make install && make clean

$(fontconfigtar):
	wget -c -q $(fontconfigurl)/$(fontconfigtar)
	touch $(fontconfigtar)

$(fontconfigmak): $(gccexe) $(automakeexe) $(zlibdll) $(pkgconfigexe) \
	$(libxmldll) $(libpngdll) $(freetypedll) $(fontconfigtar)
	if test -d $(fontconfigdir); then rm -rf $(fontconfigdir); fi
	tar xjf $(fontconfigtar)
	cd $(fontconfigdir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-fontconfig/*.patch -d .; \
	patch -p1 <fontconfig-2.11.0-symlinks-fix.patch; \
	patch -p1 <../fontconfig-2.11.0-undefined-_mm_mfence.patch; \
	autoreconf -if; \
	$(configure) --enable-iconv --enable-libxml2 --disable-docs \
		as_ln_s="cp -pR"; \
	sed -i 's,all-am: Makefile \$$(PROGRAMS),all-am:,' test/Makefile; \
	sed -i 's,all-am:\$$(PROGRAMS),all-am:,' test/Makefile

$(fontconfigdll): $(fontconfigmak)
	cd $(fontconfigdir); make && make $(install) && make clean
	sed -i 's,-L=*$(unit):[^ '\'']* ,,g' $(libdir)/libfontconfig.la
	sed -i 's,-L=*$(unit):[^ '\'']*'\'','\'',g' $(libdir)/libfontconfig.la

$(pixmantar):
	wget -c -q $(pixmanurl)/$(pixmantar)
	touch $(pixmantar)

$(pixmanmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(pixmantar)
	if test -d $(pixmandir); then rm -rf $(pixmandir); fi
	tar xzf $(pixmantar)
	cd $(pixmandir); autoreconf -if; $(configure) --disable-gtk

$(pixmandll): $(pixmanmak)
	cd $(pixmandir); make && make $(install) && make clean

$(cairotar):
	wget -c -q $(cairourl)/$(cairotar)
	touch $(cairotar)

$(cairomak): $(gccexe) $(automakeexe) $(zlibdll) $(pkgconfigexe) $(glibdll) \
	$(libpngdll) $(freetypedll) $(fontconfigdll) $(pixmandll) $(cairotar)
	if test -d $(cairodir); then rm -rf $(cairodir); fi
	tar xJf $(cairotar)
	cd $(cairodir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-cairo/*.patch -d .; \
	patch -p1 -i 0001-no-need-to-define-ssize_t-on.v2.mingw.patch; \
	patch -p1 -i 0009-standalone-headers.mingw.patch; \
	patch -p1 -i 0010-binary-mode-in-any2ppm.mingw.patch; \
	patch -p1 -i 0012-more-binary-mode.mingw.patch; \
	autoreconf -if; \
	lt_cv_deplibs_check_method='pass_all' \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -mms-bitfields' CXXFLAGS='$(cflags)' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--enable-win32 --enable-win32-font --enable-png --enable-gobject \
		--enable-tee --disable-xlib --disable-xcb --enable-fc --enable-ft

$(cairodll): $(cairomak)
	cd $(cairodir); make && make $(install) && make clean
	sed -i 's,-L=*$(unit):[^ '\'']* ,,g' $(libdir)/libcairo*.la
	sed -i 's,-L=*$(unit):[^ '\'']*'\'','\'',g' $(libdir)/libcairo*.la

$(girtar):
	wget -c -q $(girurl)/$(girtar)
	touch $(girtar)

$(girmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(libffidll) $(pythondll) \
	$(glibdll) $(cairodll) $(girtar)
	if test -d $(girdir); then rm -rf $(girdir); fi
	tar xJf $(girtar)
	cd $(girdir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-gobject-introspection/*.patch -d .; \
	patch -p1 <0003-fix-exeext.mingw.patch; \
	patch -p1 <0005-quote-path.mingw.patch; \
	patch -p1 <0006-w32-compat.mingw.patch; \
	patch -p1 <0007-w32-subproc.mingw.patch; \
	patch -p1 <0008-more.mingw.patch; \
	patch -p1 <0009-make-libs.mingw.patch; \
	patch -p1 <0010-fix-gcc-options.mingw.patch; \
	patch -p1 <0011-exefix.mingw.patch; \
	patch -p1 <0012-fix-runtime-prefix.mingw.patch; \
	patch -p1 <0013-parallel-fix.mingw.patch; \
	patch -p1 <0014-asm-volatile.mingw.patch; \
	patch -p1 <0015-inline.mingw.patch; \
	patch -p1 <0016-restrict.mingw.patch; \
	patch -p1 <0017-correct-exeext.mingw.patch; \
	patch -p1 <0020-DOS-paths-for-tools.all.patch; \
	patch -p1 <dont-load-msvcrt.patch; \
	patch -p1 <fix-python-detection.patch; \
	autoreconf -if; \
	PYTHON=$(prefix)/bin/python2 PREFIX_DEPS=$(installpath) \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -mms-bitfields' CXXFLAGS='$(cflags) -mms-bitfields' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static

$(girdll): $(girmak)
	cd $(girdir); \
	make -j1 && make $(install) && make clean

$(atktar):
	wget -c -q $(atkurl)/$(atktar)
	touch $(atktar)

$(atkmak): $(gccexe) $(pkgconfigexe) $(glibdll) $(girdll) $(atktar)
	if test -d $(atkdir); then rm -rf $(atkdir); fi
	tar xJf $(atktar)
	cd $(atkdir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-atk/*.patch -d .; \
	patch -p1 -i 0001-create-libdir.mingw.patch; \
	patch -p1 -i 0002-fix-gtkdoc.all.patch; \
	patch -p1 -i 0003-give-cc-to-git-scanner.mingw.patch; \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -mms-bitfields' CXXFLAGS='$(cflags)' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--enable-introspection --disable-glibtest

$(atkdll): $(atkmak)
	cd $(atkdir); make && make $(install) && make clean
	sed -i 's,-L=*$(unit):[^ '\'']* ,,g' $(libdir)/libatk-1.0.la
	sed -i 's,-L=*$(unit):[^ '\'']*'\'','\'',g' $(libdir)/libatk-1.0.la

$(pangotar):
	wget -c -q $(pangourl)/$(pangotar)
	touch $(pangotar)

$(pangomak): $(gccexe) $(pkgconfigexe) $(glibdll) $(freetypedll) \
	$(fontconfigdll) $(cairodll) $(girdll) $(pangotar)
	if test -d $(pangodir); then rm -rf $(pangodir); fi
	tar xJf $(pangotar)
	cd $(pangodir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-pango/*.patch -d .; \
	patch -p1 -i 0001-no-unconditional-xft-please.all.patch; \
	patch -p1 -i 0002-msvc-is-impotent-but-not.mingw.patch; \
	patch -p1 -i 0005-fix-gtkdoc.all.patch; \
	patch -p1 -i 0006-give-cc-to-gir-scanner.mingw.patch; \
	patch -p1 -i 0007-include-freetype.mingw.patch; \
	patch -p1 -i 0008-allow-backend-selection.mingw.patch; \
	patch -p1 -i 0009-pango_enable_static_build.patch; \
	patch -p1 -i 0010-pangocairo-gir-add-cairo.patch; \
	autoreconf -if; \
	sed -i 's/have_libthai=true/have_libthai=false/' configure; \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -mms-bitfields -I$(prefix)/include/cairo' \
	CXXFLAGS='$(cflags) -mms-bitfields' LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--with-included-modules=yes --with-dynamic-modules=no \
		--enable-introspection

$(pangodll): $(pangomak)
	cd $(pangodir); make && make $(install) && make clean
	sed -i 's,-L=*$(unit):[^ '\'']* ,,g' $(libdir)/libpango*.la
	sed -i 's,-L=*$(unit):[^ '\'']*'\'','\'',g' $(libdir)/libpango*.la

$(gdk_pixbuftar):
	wget -c -q $(gdk_pixbufurl)/$(gdk_pixbuftar)
	touch $(gdk_pixbuftar)

$(gdk_pixbufmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(glibdll) \
	$(libpngdll) $(girdll) $(gdk_pixbuftar)
	if test -d $(gdk_pixbufdir); then rm -rf $(gdk_pixbufdir); fi
	tar xJf $(gdk_pixbuftar)
	cd $(gdk_pixbufdir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-gdk-pixbuf2/*.patch -d .; \
	patch -p1 -i 0004-give-cc-to-gir-scanner.all.patch; \
	autoreconf -if;
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -mms-bitfields' CXXFLAGS='$(cflags) -mms-bitfields' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--enable-introspection

$(gdk_pixbufdll): $(gdk_pixbufmak)
	cd $(gdk_pixbufdir); make && make $(install) && make clean
	sed -i 's,-L=*$(unit):[^ '\'']* ,,g' $(libdir)/libgdk_pixbuf-2.0.la
	sed -i 's,-L=*$(unit):[^ '\'']*'\'','\'',g' $(libdir)/libgdk_pixbuf-2.0.la

$(hicolortar):
	wget -c -q $(hicolorurl)/$(hicolortar)
	touch $(hicolortar)

$(hicolormak): $(hicolortar)
	if test -d $(hicolordir); then rm -rf $(hicolordir); fi
	tar xzf $(hicolortar)
	cd $(hicolordir); $(configure)

$(hicolordll): $(hicolormak)
	cd $(hicolordir); make install

$(gtk2tar):
	wget -c -q $(gtk2url)/$(gtk2tar)
	touch $(gtk2tar)

$(gtk2mak): $(gccexe) $(zlibdll) $(pkgconfigexe) $(freetypedll) \
	$(fontconfigdll) $(glibdll) $(cairodll) $(girdll) $(atkdll) $(pangodll) \
	$(gdk_pixbufdll) $(gtk2tar)
	if test -d $(gtk2dir); then rm -rf $(gtk2dir); fi
	tar xJf $(gtk2tar)
	cd $(gtk2dir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-gtk2/*.patch -d .; \
	patch -p1 -i 0001-fix-m4-location.mingw.patch; \
	patch -p1 -i 0002-Fix-def-installation.all.patch; \
	patch -p1 -i 0003-Fix-notebook-tab-state-change.mingw.patch; \
	patch -p1 -i 0005-Fix-header-ref.all.patch; \
	patch -p1 -i 0006-Fix-unix-symbols-in-docs.mingw.patch; \
	patch -p1 -i 0008-fix-doc-building.all.patch; \
	patch -p1 -i 0009-give-cc-to-gir-scanner.mingw.patch; \
	patch -p1 -i 0010-put-gtk-dll-into-path.mingw.patch; \
	patch -p1 -i 0011-gir-for-gdkwin32.mingw.patch; \
	patch -p1 -i 0012-embed-manifest.all.patch;
	patch -p0 <../gtk+-2.24.22-modules-input-Makefile.in.patch; \
	autoreconf -if; \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -mms-bitfields' CXXFLAGS='$(cflags) -mms-bitfields' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--with-included-immodules=ime --with-gdktarget=win32; \
		--disable-cups --disable-papi --disable-glibtest \
		--enable-introspection; \
	perl ../gtk+64.pl
#	sed -i 's/gtk-update-icon-cache/guic/g' gtk/Makefile*; \

$(gtk2dll): $(gtk2mak)
	cd $(gtk2dir); make && make $(install) && make clean
	sed -i 's,-L=*$(unit):[^ '\'']* ,,g' $(libdir)/libgailutil.la \
		$(libdir)/libgdk-win32-2.0.la $(libdir)/libgtk-win32-2.0.la
	sed -i 's,-L=*$(unit):[^ '\'']*'\'','\'',g' $(libdir)/libgailutil.la \
		$(libdir)/libgdk-win32-2.0.la $(libdir)/libgtk-win32-2.0.la

$(freegluttar):
	wget -c -q $(freegluturl)/$(freegluttar)
	touch $(freegluttar)

$(freeglutmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(freegluttar)
	if test -d $(freeglutdir); then rm -rf $(freeglutdir); fi
	tar xzf $(freegluttar)
	cd $(freeglutdir); autoreconf -if; $(configure) --without-x
	
$(freeglutdll): $(freeglutmak)
	cd $(freeglutdir); make && make $(install) && make clean

$(gsltar):
	wget -c -q $(gslurl)/$(gsltar)
	touch $(gsltar)

$(gslmak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(gsltar)
	if test -d $(gsldir); then rm -rf $(gsldir); fi
	tar xzf $(gsltar)
	cd $(gsldir); autoreconf -if; $(configure)

$(gsldll): $(gslmak)
	cd $(gsldir); make && make $(install) && make clean

$(gtk3tar):
	wget -c -q $(gtk3url)/$(gtk3tar)

$(gtk3mak): $(gccexe) $(automakeexe) $(pkgconfigexe) $(cairodll) $(atkdll) \
	$(pangodll) $(gdk_pixbufdll) $(gtk2dll) $(gtk3tar) #$(girdll)
	if test -d $(gtk3dir); then rm -rf $(gtk3dir); fi
	tar xJf $(gtk3tar)
	cd $(gtk3dir); \
	unzip -j ../$(mingw_patches) \
		MINGW-packages-master/mingw-w64-gtk3/*.patch -d .; \
	patch -Np1 -i "0001-REBURN-THE-DEF-FILE.mingw.patch"; \
	patch -Np1 -i "0009-give-cc-to-gir-scanner.mingw.patch"; \
	patch -Np1 -i "0010-put-gtk-dll-into-path.mingw.patch"; \
	patch -Np1 -i "0011-gir-for-gdkwin32.mingw.patch"; \
	patch -Np1 -i "0012-embed-manifest.all.patch"; \
	autoreconf -if; \
	PKG_CONFIG_PATH='$(pkg_config_path)' \
	CC=$(cc) CXX=$(cxx) CPPFLAGS='$(cppflags)' \
	CFLAGS='$(cflags) -mms-bitfields' CXXFLAGS='$(cflags) -mms-bitfields' \
	LDFLAGS='$(ldflags)' \
	configure --prefix=$(prefix) --disable-debug --host=$(host) \
		--enable-shared --disable-static \
		--enable-win32-backend --disable-gtk2-dependency \
		--enable-introspection --disable-cups

$(gtk3dll): $(gtk3mak)
	cd $(gtk3dir); make && make $(install) && make clean
	sed -i 's,-L=*$(unit):[^ '\'']* ,,g' $(libdir)/libgailutil-3.la \
		$(libdir)/libgdk-3.la $(libdir)/libgtk-3.la
	sed -i 's,-L=*$(unit):[^ '\'']*'\'','\'',g' $(libdir)/libgailutil-3.la \
		$(libdir)/libgdk-3.la $(libdir)/libgtk-3.la

$(mpidll): $(gccexe)
	cp -r '/c/Program Files/Microsoft HPC Pack 2012/Inc/'* $(includedir)
	cp -r '/c/Program Files/Microsoft HPC Pack 2012/Bin/'* $(bindir)
	cp $(winsysdir)/msmpi.dll $(bindir)
	cd $(libdir); gendef $(bindir)/msmpi.dll; \
	dlltool -d msmpi.def -l libmsmpi.a -D $(bindir)/msmpi.dll
#	cp $(winsysdir)ws2_32.dll $(bindir)
#	cd $(libdir); gendef $(bindir)/ws2_32.dll; \
#	dlltool -d ws2_32.def -l libws2_32.a -D $(bindir)/ws2_32.dll
#	cp $(winsysdir)ole32.dll $(bindir)
#	cd $(libdir); gendef $(bindir)/ole32.dll; \
#	dlltool -d ole32.def -l libole32.a -D $(bindir)/ole32.dll
#	cp $(winsysdir)winmm.dll $(bindir)
#	cd $(libdir); gendef $(bindir)/winmm.dll; \
#	dlltool -d winmm.def -l libwinmm.a -D $(bindir)/winmm.dll
#	cp $(winsysdir)shlwapi.dll $(bindir)
#	cd $(libdir); gendef $(bindir)/shlwapi.dll; \
#	dlltool -d shlwapi.def -l libshlwapi.a -D $(bindir)/shlwapi.dll
#	cp $(winsysdir)dnsapi.dll $(bindir)
#	cd $(libdir); gendef $(bindir)/dnsapi.dll; \
#	dlltool -d dnsapi.def -l libdnsapi.a -D $(bindir)/dnsapi.dll
#	cp $(winsysdir)iphlpapi.dll $(bindir)
#	cd $(libdir); gendef $(bindir)/iphlpapi.dll; \
#	dlltool -d iphlpapi.def -l libiphlpapi.a -D $(bindir)/iphlpapi.dll
#	cp $(winsysdir)gdi32.dll $(bindir)
#	cd $(libdir); gendef $(bindir)/gdi32.dll; \
#	dlltool -d gdi32.def -l libgdi32.a -D $(bindir)/gdi32.dll
#	cp $(winsysdir)msimg32.dll $(bindir)
#	cd $(libdir); gendef $(bindir)/msimg32.dll; \
#	dlltool -d msimg32.def -l libmsimg32.a -D $(bindir)/msimg32.dll
